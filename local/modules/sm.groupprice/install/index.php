<?
use Bitrix\Main\Localization\Loc;
use Bitrix\Main\Application;
use Bitrix\Main\ModuleManager;

Loc::loadMessages(__FILE__);

class sm_groupprice extends Cmodule{

    private $exclusionAdminFiles;

    function __construct()
    {
        $arModuleVersion = [];

        include __dir__ . "/version.php";
        $this->MODULE_ID = 'sm.groupprice';
        $this->MODULE_VERSION = $arModuleVersion['VERSION'];
        $this->MODULE_VERSION_DATE = $arModuleVersion['VERSION_DATE'];
        $this->MODULE_NAME = Loc::getMessage('SM_GROUPPRICE_MODULE_NAME');
        $this->MODULE_DESCRIPTION = Loc::getMessage('SM_GROUPPRICE_MODULE_DESCRIPTION');
        $this->PARTNER_NAME = Loc::getMessage('SM_GROUPPRICE_MODULE_PARTNER_NAME');
        $this->PARTNER_URI = Loc::getMessage('SM_GROUPPRICE_MODULE_PARTNER_URI');

        $this->setExclusionAdminFiles([
            '..',
            '.',
            'menu.php',
            'operation_description.php',
            'task_description.php'
        ]);
    }
    public function getPath($notDocumentRoot=false)
    {
        if($notDocumentRoot)
            return str_ireplace(Application::getDocumentRoot(),'',dirname(__DIR__));
        else
            return dirname(__DIR__);
    }

    function DoInstall()
    {
        global $APPLICATION;
        if($this->isVersionD7()){
            $this->InstallDB();
            $this->InstallEvents();
            $this->InstallFiles();
            ModuleManager::registerModule($this->MODULE_ID);
        }else{
            $APPLICATION->ThrowException(Loc::getMessage('SM_GROUPPRICE_MODULE_INSTALL_ERROR'));
        }
        $APPLICATION->IncludeAdminFile(Loc::getMessage('SM_GROUPPRICE_MODULE_INSTALL_TITLE'), $this->getPath() . '/install/step.php');

        $config = \Bitrix\Main\Config\Configuration::getInstance();
        $smGroupPrice = $config->get('smGroupPrice');
        $smGroupPrice['install'] = $smGroupPrice['install'] + 1;
        $config->add('smGroupPrice', $smGroupPrice);
        try {
            $config->saveConfiguration();
        } catch (\Bitrix\Main\InvalidOperationException $e) {
//            Bitrix\Main\Diag\Debug::dumpToFile($e, "e", "/debug.txt");
        }
    }

    function DoUninstall()
    {
        global $APPLICATION;
        $context = Application::getInstance()->getContext();
        $request = $context->getRequest();

        if($request['step'] < 2){
            $APPLICATION->IncludeAdminFile(Loc::getMessage('SM_GROUPPRICE_MODULE_UNINSTALL_TITLE'), $this->getPath() . '/install/unstep1.php');
        }elseif ($request['step'] == 2){
            $this->UnInstallEvents();
            $this->UnInstallFiles();
            $this->InstallDB();
            ModuleManager::unRegisterModule($this->MODULE_ID);

            $APPLICATION->IncludeAdminFile(Loc::getMessage('SM_GROUPPRICE_MODULE_UNINSTALL_TITLE'), $this->getPath() . '/install/unstep2.php');
        }

        $config = \Bitrix\Main\Config\Configuration::getInstance();
        $smGroupPrice=$config->get('smGroupPrice');
        $smGroupPrice['uninstall']=$smGroupPrice['uninstall']+1;
        $config->add('smGroupPrice', $smGroupPrice);
        $config->saveConfiguration();
    }
    public function isVersionD7(){
        return CheckVersion(ModuleManager::getVersion('main'), '14.00.00');
    }

    function InstallEvents()
    {
        parent::InstallEvents(); // TODO: Change the autogenerated stub
    }

    function UnInstallEvents()
    {
        parent::UnInstallEvents(); // TODO: Change the autogenerated stub
    }

    function InstallFiles()
    {
        $path = $this->GetPath()."/install/components";

        if(\Bitrix\Main\IO\Directory::isDirectoryExists($path)){
            CopyDirFiles($path, $_SERVER["DOCUMENT_ROOT"]."/bitrix/components", true, true);
        }else{
            throw new \Bitrix\Main\IO\InvalidPathException($path);
        }

        if (\Bitrix\Main\IO\Directory::isDirectoryExists($path = $this->GetPath() . '/admin')){

            CopyDirFiles($this->GetPath() . "/install/admin/", $_SERVER["DOCUMENT_ROOT"] . "/bitrix/admin"); //если есть файлы для копирования
            if ($dir = opendir($path))
            {
                while (false !== $item = readdir($dir))
                {
                    if (in_array($item, $this->getExclusionAdminFiles()))
                        continue;
                    file_put_contents($_SERVER['DOCUMENT_ROOT'].'/bitrix/admin/'.$this->MODULE_ID.'_'.$item,
                        '<'.'? require($_SERVER["DOCUMENT_ROOT"]."'.$this->GetPath(true).'/admin/'.$item.'");?'.'>');
                }
                closedir($dir);
            }
        }
    }

    function UnInstallFiles()
    {
        \Bitrix\Main\IO\Directory::deleteDirectory($_SERVER["DOCUMENT_ROOT"] . '/bitrix/components/sm/');

        if (\Bitrix\Main\IO\Directory::isDirectoryExists($path = $this->GetPath() . '/admin')) {
            DeleteDirFiles($_SERVER["DOCUMENT_ROOT"] . $this->GetPath() . '/install/admin/', $_SERVER["DOCUMENT_ROOT"] . '/bitrix/admin');
            if ($dir = opendir($path)) {
                while (false !== $item = readdir($dir)) {
                    if (in_array($item, $this->getExclusionAdminFiles()))
                        continue;
                    \Bitrix\Main\IO\File::deleteFile($_SERVER['DOCUMENT_ROOT'] . '/bitrix/admin/' . $this->MODULE_ID . '_' . $item);
                }
                closedir($dir);
            }
        }
        return true;
    }

    function UnInstallDB()
    {
        parent::UnInstallDB(); // TODO: Change the autogenerated stub
    }

    function InstallDB()
    {
        return parent::InstallDB(); // TODO: Change the autogenerated stub
    }

    /**
     * @return mixed
     */
    public function getExclusionAdminFiles()
    {
        return $this->exclusionAdminFiles;
    }

    /**
     * @param mixed $exclusionAdminFiles
     */
    public function setExclusionAdminFiles($exclusionAdminFiles)
    {
        $this->exclusionAdminFiles = $exclusionAdminFiles;
    }


}
